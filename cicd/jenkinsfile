pipeline {
    agent any
    
    environment {
        DOCKER_HUB_CREDENTIALS = credentials('docker-hub-repo')
        DOCKER_IMAGE_NAME = "davidokpe/ms1-app"
    }

    stages {
        stage("Install Docker") {
            steps {
                script {
                    // Check if Docker is already installed
                    def dockerVersion = sh(script: 'docker --version', returnStdout: true).trim()
                    if (dockerVersion.contains("Docker version")) {
                        echo "Docker is already installed: $dockerVersion"
                    } else {
                        echo "Installing Docker..."
                        // Install Docker
                        sh 'curl -fsSL https://get.docker.com -o get-docker.sh'
                        sh 'sudo sh get-docker.sh'
                        sh 'sudo usermod -aG docker $USER' // Add current user to the docker group
                    }
                }
            }
        }

        stage("Build Docker Image") {
            steps {
                script {
                    echo "Building the Docker image..."
                    docker.build(env.DOCKER_IMAGE_NAME, "-f Dockerfile .")
                }
            }
        }

        stage("Push Docker Image") {
            steps {
                script {
                    echo "Pushing the Docker image to Docker Hub..."
                    docker.withRegistry('https://index.docker.io/v1/', env.DOCKER_HUB_CREDENTIALS) {
                        docker.image(env.DOCKER_IMAGE_NAME).push()
                    }
                }
            }
        }

        stage("Deploy") {
            steps {
                script {
                    echo "Deploying the application..."
                    // Add deployment steps here if needed
                }
            }
        }
    }
}
